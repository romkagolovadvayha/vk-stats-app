{"version":3,"sources":["redux/configureStore.tsx","redux/reducers/user.tsx","redux/reducers/token.tsx","redux/reducers/group.tsx","redux/reducers/groups.tsx","redux/reducers/popoutApp.tsx","redux/reducers/modalApp.tsx","redux/reducers/friends.tsx","redux/reducers/utils.tsx","redux/reducers/userBy.tsx","redux/reducers/execute.tsx","redux/reducers/index.tsx","components/FooterMenu/FooterMenu.tsx","containers/Layout/Presenter.tsx","containers/Layout/index.ts","redux/actions/modalAppActions.tsx","redux/actions/utilsActions.tsx","components/User/User.tsx","redux/actions/userActions.tsx","containers/Home/Presenter.tsx","containers/Home/index.ts","redux/actions/tokenActions.tsx","containers/Contacts/Contacts.tsx","containers/Faq/Faq.tsx","components/GroupsList/List/Item/index.ts","components/GroupsList/List/Item/Presenter.tsx","components/GroupsList/AddForm/Presenter.tsx","components/GroupsList/AddForm/index.ts","redux/actions/groupsActions.tsx","redux/actions/friendsActions.tsx","components/GroupsList/List/ProcessForm/UserList/index.ts","components/GroupsList/List/ProcessForm/UserList/Presenter.tsx","components/GroupsList/List/ProcessForm/Presenter.tsx","components/GroupsList/List/ProcessForm/index.ts","redux/actions/executeActions.tsx","components/GroupsList/List/Presenter.tsx","components/GroupsList/List/index.ts","redux/actions/popoutAppActions.tsx","containers/Groups/index.ts","containers/Groups/Presenter.tsx","containers/SecurityUser/Presenter.tsx","containers/SecurityUser/index.ts","containers/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["initialState","loadingUser","user","state","action","type","payload","token","loadingGroup","group","response","loadingGroups","groups","popout","popoutApp","block","modal","modalApp","loadingFriends","friends","loadingResolveScreenName","utils","loadingUserBy","userBy","loadingExecuteGetMembers","loadingExecuteGetFriends","loadingExecuteGetFriendsInfo","execute","combineReducers","routing","routerReducer","logger","createLogger","router","routerMiddleware","browserHistory","createStoreWithMiddleware","applyMiddleware","thunk","createStore","FooterMenu","props","onStoryChange","e","store","currentTarget","dataset","story","setState","activeStory","push","render","onClick","selected","data-story","text","getCurrentLocation","pathname","React","Component","connect","dispatch","Presenter","activePanel","id","style","paddingBottom","children","Layout","setModalApp","getResolveScreenName","url","a","sendPromise","method","params","screen_name","v","https","access_token","req","message","User","getUser","getUserInfo","className","size","first_name","status","before","src","photo_100","aside","last_name","wide","to","fetchData","getAuthToken","this","Home","app_id","scope","Contacts","Faq","separator","header","mode","Item","photo","removeHandler","membersCount","background","fill","getMembersCount","count","str","res","parseFloat","toFixed","Math","trunc","modalBack","selectItem","item","addItemHandler","search","items","onChange","bind","target","value","indexOf","screenName","split","isItem","console","log","searchGroup","object_id","searchUser","i","length","objectId","getGroup","newItems","name","photo_50","members_count","domain","getGroupsList","getFriendsList","getGroups","groupsList","map","concat","getFriends","friendsList","loadingItems","activeModal","dynamicContentHeight","onClose","left","slice","key","color","isScreenName","filter","toLowerCase","AddForm","extended","fields","group_id","user_ids","UserList","itemsStr","join","top","progress","process","intersec","isStart","startButton","disabled","title","startProcess","allMembersCount","currentCount","members","getMembersByGroupId","getMembersByUserId","parseInt","intersecSortArr","stopProcess","array_1","array_2","n","m","k","j","array_3","delay","duration","Promise","resolve","setTimeout","getExecuteGetMembers","offset","newMembers","membersCountProcess","proc","ceil","setProgress","getExecuteGetFriends","start","ProcessForm","total_count","user_id","addItem","openAddGroupForm","closePopout","openDestructive","removeItem","setPopoutApp","actionsLayout","actions","autoclose","List","Groups","error","loading","university","school","age","placeholder","marginTop","getInformationHandler","getExecuteGetFriendsInfo","getObjectId","getMyUniversities","getMySchool","getMyAge","list","universities","getItemArrayById","replayCount","replayCountIncItemArrayById","getItemMaxReplayCount","schools","myAge","ageList","bdate","replace","date","birthDateToAge","maxAgeRepeat","index","birthDate","Date","getTime","array","maxItem","SecurityUser","NotFoundPage","rootReducer","history","syncHistoryWithStore","send","ReactDOM","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.08d0ffaa.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n// @ts-ignore\nimport { browserHistory } from \"react-router\";\nimport { routerMiddleware } from \"react-router-redux\";\n// @ts-ignore\nimport rootReducer from './reducers';\n\nconst logger = createLogger();\nconst router = routerMiddleware(browserHistory);\n\nconst createStoreWithMiddleware = applyMiddleware(thunk, router, logger)(\n    createStore\n);\n\nexport default (initialState?: any) => createStoreWithMiddleware(rootReducer, initialState)","const initialState = {\n    loadingUser: false\n};\n\nconst user = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"GET_USER_INFO_REQ\":\n            return {\n                ...state,\n                loadingUser: true\n            };\n        case \"GET_USER_INFO_RES\":\n            return {\n                ...state,\n                ...action.payload,\n                loadingUser: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default user;","const initialState = {};\n\nconst token = (state = initialState, action: any) => {\n    if (action.type === \"GET_AUTH_TOKEN_RES\") {\n        return {\n            ...state,\n            ...action.payload\n        };\n    } else {\n        return state;\n    }\n};\n\nexport default token;","const initialState = {\n    loadingGroup: false\n};\n\nconst group = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"GET_GROUP_REQ\":\n            return {\n                ...state,\n                loadingGroup: true\n            };\n        case \"GET_GROUP_RES\":\n            return {\n                ...state,\n                ...action.payload.response[0],\n                loadingGroup: false\n            };\n        case \"GROUP_RESET_RES\":\n            return {\n                ...initialState\n            };\n        default:\n            return state;\n    }\n};\n\nexport default group;","const initialState = {\n    loadingGroups: false\n};\n\nconst groups = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"GET_GROUPS_REQ\":\n            return {\n                ...state,\n                loadingGroups: true\n            };\n        case \"GET_GROUPS_RES\":\n            return {\n                ...state,\n                ...action.payload.response,\n                loadingGroups: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default groups;","const initialState = {\n    popout: false,\n};\n\nconst popoutApp = (state: any = initialState, action: any) => {\n    switch (action.type) {\n        case 'GET_POPOUT':\n            return {\n                ...state\n            };\n        case 'SET_POPOUT':\n            return {\n                ...state,\n                popout: action.block\n            };\n        default:\n            return state\n    }\n};\n\nexport default popoutApp;","const initialState = {\n    modal: false,\n};\n\nconst modalApp = (state: any = initialState, action: any) => {\n    switch (action.type) {\n        case 'GET_MODAL':\n            return {\n                ...state\n            };\n        case 'SET_MODAL':\n            return {\n                ...state,\n                modal: action.block\n            };\n        default:\n            return state\n    }\n};\n\nexport default modalApp;","const initialState = {\n    loadingFriends: false\n};\n\nconst friends = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"GET_FRIENDS_REQ\":\n            return {\n                ...state,\n                loadingFriends: true\n            };\n        case \"GET_FRIENDS_RES\":\n            return {\n                ...state,\n                ...action.payload.response,\n                loadingFriends: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default friends;","const initialState = {\n    loadingResolveScreenName: false\n};\n\nconst utils = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"GET_RESOLVE_SCREEN_NAME_REQ\":\n            return {\n                ...state,\n                loadingResolveScreenName: true\n            };\n        case \"GET_RESOLVE_SCREEN_NAME_RES\":\n            return {\n                ...state,\n                ...action.payload.response,\n                loadingResolveScreenName: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default utils;","const initialState = {\n    loadingUserBy: false\n};\n\nconst userBy = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"GET_USER_REQ\":\n            return {\n                ...state,\n                loadingUserBy: true\n            };\n        case \"GET_USER_RES\":\n            return {\n                ...state,\n                ...action.payload,\n                loadingUserBy: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default userBy;","const initialState = {\n    loadingExecuteGetMembers: false,\n    loadingExecuteGetFriends: false,\n    loadingExecuteGetFriendsInfo: false,\n};\n\nconst execute = (state = initialState, action: any) => {\n    switch (action.type) {\n        case \"GET_EXECUTE_GET_MEMBERS_REQ\":\n            return {\n                ...state,\n                loadingExecuteGetMembers: true\n            };\n        case \"GET_EXECUTE_GET_MEMBERS_RES\":\n            return {\n                ...state,\n                ...action.payload.response,\n                loadingExecuteGetMembers: false\n            };\n        case \"GET_EXECUTE_GET_FRIENDS_REQ\":\n            return {\n                ...state,\n                loadingExecuteGetFriends: true\n            };\n        case \"GET_EXECUTE_GET_FRIENDS_RES\":\n            return {\n                ...state,\n                ...action.payload.response,\n                loadingExecuteGetFriends: false\n            };\n        case \"GET_EXECUTE_GET_FRIENDS_INFO_REQ\":\n            return {\n                ...state,\n                loadingExecuteGetFriendsInfo: true\n            };\n        case \"GET_EXECUTE_GET_FRIENDS_INFO_RES\":\n            return {\n                ...state,\n                ...action.payload.response,\n                loadingExecuteGetFriendsInfo: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default execute;","import { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\nimport user from \"./user\";\nimport token from \"./token\";\nimport group from \"./group\";\nimport groups from \"./groups\";\nimport popoutApp from \"./popoutApp\";\nimport modalApp from \"./modalApp\";\nimport friends from \"./friends\";\nimport utils from \"./utils\";\nimport userBy from \"./userBy\";\nimport execute from \"./execute\";\n\nexport default combineReducers({\n    routing: routerReducer,\n    user,\n    token,\n    group,\n    groups,\n    popoutApp,\n    modalApp,\n    friends,\n    utils,\n    userBy,\n    execute,\n});","import React from \"react\";\n// @ts-ignore\nimport {connect} from \"react-redux\";\nimport {Tabbar, TabbarItem} from \"@vkontakte/vkui\";\n// @ts-ignore\nimport {browserHistory} from \"react-router\";\n// @ts-ignore\nimport Icon28ChatsOutline from '@vkontakte/icons/dist/28/chats_outline';\n// @ts-ignore\nimport Icon24Help from '@vkontakte/icons/dist/24/help';\n// @ts-ignore\nimport Icon24Home from '@vkontakte/icons/dist/24/home';\n\nclass FooterMenu extends React.Component {\n\n    public state: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            activeStory: browserHistory.getCurrentLocation().pathname\n        };\n    }\n\n    private onStoryChange = (e: any) => {\n        let store = e.currentTarget.dataset.story;\n        this.setState({ activeStory:  store});\n        browserHistory.push(`${store}`);\n    };\n\n    render = () => {\n        const {activeStory} = this.state;\n        return (\n            <Tabbar>\n                <TabbarItem\n                    onClick={(e: any) => this.onStoryChange(e)}\n                    selected={activeStory === '/'}\n                    data-story=\"/\"\n                    text=\"Домашняя\"\n                ><Icon24Home/></TabbarItem>\n                <TabbarItem\n                    onClick={(e: any) => this.onStoryChange(e)}\n                    selected={activeStory === '/contacts'}\n                    data-story=\"/contacts\"\n                    text=\"Контакты\"\n                ><Icon28ChatsOutline/></TabbarItem>\n                <TabbarItem\n                    onClick={(e: any) => this.onStoryChange(e)}\n                    selected={activeStory === '/faq'}\n                    data-story=\"/faq\"\n                    text=\"Помощь\"\n                ><Icon24Help/></TabbarItem>\n            </Tabbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    state,\n    activeStory: state.activeStory,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FooterMenu);\n","import React from 'react';\nimport {Panel, View} from \"@vkontakte/vkui\";\nimport FooterMenu from \"../../components/FooterMenu/FooterMenu\";\n\nconst Presenter = (props: any) => {\n    const {popout, modal} = props;\n    return (\n        <View popout={popout} modal={modal} activePanel={props.id}>\n            <Panel id={props.id}>\n                <div style={{paddingBottom: '50px'}}>\n                    {props.children}\n                </div>\n                <FooterMenu/>\n            </Panel>\n        </View>\n    );\n};\n\n\nexport default Presenter;\n","import { connect } from \"react-redux\";\n\nimport Presenter from \"./Presenter\";\n\nconst mapStateToProps = (state: any) => ({\n    popout: state.popoutApp.popout,\n    modal: state.modalApp.modal\n});\n\nconst Layout = connect(mapStateToProps)(Presenter);\n\nexport default Layout;\n","export const getModalApp = () => (dispatch: any) => {\n    dispatch({type: \"GET_MODAL\"});\n};\n\nexport const setModalApp = (block: any) => (dispatch: any) => {\n    dispatch({type: \"SET_MODAL\", block});\n};","// @ts-ignore\nimport connect from \"@vkontakte/vk-connect\";\n\nexport const getResolveScreenName = (url: string, token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_RESOLVE_SCREEN_NAME_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"utils.resolveScreenName\",\n            params: {\n                screen_name: url,\n                v: \"5.27\",\n                https: 1,\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_RESOLVE_SCREEN_NAME_RES\", payload: req});\n        return req.response;\n    } catch (error) {\n        dispatch({type: \"GET_RESOLVE_SCREEN_NAME_FAIL\", payload: error.message});\n    }\n};","import React from \"react\";\n// @ts-ignore\nimport {connect} from \"react-redux\";\nimport {getUserInfo} from \"../../redux/actions\";\nimport {Avatar, Spinner, PanelHeaderContent} from \"@vkontakte/vkui\";\nimport './User.scss';\n\nclass User extends React.Component {\n\n    constructor(props: any) {\n        super(props);\n        // @ts-ignore\n        const {user} = this.props;\n        if (!user.first_name) {\n            this.getUser();\n        }\n    }\n\n    private getUser = async () => {\n        // @ts-ignore\n        const {getUserInfo} = this.props;\n        await getUserInfo();\n    };\n\n    render = () => {\n        // @ts-ignore\n        const {loadingUser, user} = this.props;\n        return (\n            <div className=\"User\">\n                {loadingUser && <Spinner size=\"medium\" />}\n                {user.first_name && <PanelHeaderContent\n                    status=\"Добро пожаловать!\"\n                    before={<Avatar size={36}\n                                    src={user.photo_100}/>}\n                    aside=\"\"\n                >\n                    {user.first_name} {user.last_name}\n                </PanelHeaderContent>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    state,\n    user: state.user,\n    loadingUser: state.user.loadingUser,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    dispatch,\n    getUserInfo: () => dispatch(getUserInfo()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import connect from \"@vkontakte/vk-connect\";\n\nexport const getUserInfo = () => async (dispatch: any) => {\n    dispatch({type: \"GET_USER_INFO_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n        dispatch({type: \"GET_USER_INFO_RES\", payload: req});\n        return req;\n    } catch (error) {\n        dispatch({type: \"GET_USER_INFO_FAIL\", payload: error.message});\n    }\n};\n\nexport const getUser = (id: number, token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_USER_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"users.get\",\n            params: {\n                user_ids: id,\n                fields: \"photo_50, domain\",\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_USER_RES\", payload: req});\n        return req.response[0];\n    } catch (error) {\n        dispatch({type: \"GET_USER_FAIL\", payload: error.message});\n    }\n};","import React from 'react';\nimport './Styles.scss';\nimport Layout from \"../Layout\";\n// @ts-ignore\nimport {Link} from \"react-router\";\nimport User from \"../../components/User/User\";\n// import Balance from \"../../components/User/Balance\";\nimport {Separator, List, Cell, PanelHeader, Div} from \"@vkontakte/vkui\";\n// import slider1 from './images/1.jpg';\n\n// @ts-ignore\nimport Icon24View from '@vkontakte/icons/dist/24/view';\n// @ts-ignore\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\n\nclass Presenter extends React.Component {\n    constructor(props: any) {\n        super(props);\n        this.fetchData();\n    }\n\n    fetchData() {\n        // @ts-ignore\n        const { getAuthToken } = this.props;\n        getAuthToken();\n    }\n\n    render = () => {\n        return (\n            <Layout id=\"home\">\n                <PanelHeader>Анализ вконтакте</PanelHeader>\n                <Div className=\"profile\">\n                    <User/>\n                    {/*<Balance/>*/}\n                </Div>\n                <Separator wide/>\n                <List className=\"navigationList\">\n                    <Link to=\"/groups\">\n                        <Cell before={<Icon24Users/>}>Общие участники</Cell>\n                    </Link>\n                    <Separator wide/>\n                    <Link to=\"/securityUser\">\n                        <Cell before={<Icon24View/>}>Узнать скрытые данные</Cell>\n                    </Link>\n                </List>\n            </Layout>\n        );\n    }\n}\n\nexport default Presenter;","import { connect } from \"react-redux\";\n\nimport Presenter from \"./Presenter\";\nimport {getAuthToken} from \"../../redux/actions\";\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    dispatch,\n    getAuthToken: () => dispatch(getAuthToken()),\n});\n\nconst Home = connect(null, mapDispatchToProps)(Presenter);\n\nexport default Home;\n","// @ts-ignore\nimport connect from \"@vkontakte/vk-connect\";\n\nexport const getAuthToken = () => async (dispatch: any) => {\n    dispatch({type: \"GET_AUTH_TOKEN_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n            app_id: 7312864,\n            scope: \"groups,stats\"\n        });\n        dispatch({type: \"GET_AUTH_TOKEN_RES\", payload: req});\n        return req;\n    } catch (error) {\n        dispatch({type: \"GET_AUTH_TOKEN_FAIL\", payload: error.message});\n    }\n};","import React from 'react';\nimport './Contacts.scss';\n// @ts-ignore\nimport {Div, PanelHeader} from \"@vkontakte/vkui\";\nimport Layout from \"../Layout\";\n\nconst Contacts = () => {\n    return (\n        <Layout id=\"contacts\">\n            <PanelHeader>Контакты</PanelHeader>\n            <Div>\n                Contacts page...\n            </Div>\n        </Layout>\n    );\n};\n\nexport default Contacts;\n","import React from 'react';\n// @ts-ignore\nimport {Group, CardGrid, Card, Header, PanelHeader, Div} from \"@vkontakte/vkui\";\nimport Layout from \"../Layout\";\n\nconst Faq = () => {\n    return (\n        <Layout id=\"faq\">\n            <PanelHeader>Помощь</PanelHeader>\n            <Group separator=\"hide\" header={<Header mode=\"secondary\">Приложение платное?</Header>}>\n                <CardGrid>\n                    <Card size=\"l\">\n                        <Div>\n                            У нас есть платные функции, но в большей части приложение имеет бесплатный функционал.\n                        </Div>\n                    </Card>\n                </CardGrid>\n            </Group>\n            <Group separator=\"hide\" header={<Header mode=\"secondary\">Идеи предложения</Header>}>\n                <CardGrid>\n                    <Card size=\"l\">\n                        <Div>\n                            Вы можете предложить нам свою идею, которую мы рассмотрим и возможно реализуем в данном приложении.\n                        </Div>\n                    </Card>\n                </CardGrid>\n            </Group>\n        </Layout>\n    );\n};\n\nexport default Faq;\n","import Presenter from \"./Presenter\";\n\nconst Item = Presenter;\n\nexport default Item;\n","import React from \"react\";\nimport {Avatar} from \"@vkontakte/vkui\";\nimport './Styles.scss';\n// @ts-ignore\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel';\n\nexport interface GroupItemProps {\n    id: number;\n    photo: string;\n    removeHandler: any;\n    membersCount: number;\n}\n\nclass Presenter extends React.Component <GroupItemProps> {\n\n    private getMembersCount(count: number) {\n        let str = `${count}`;\n        let res = parseFloat((count / 1000000).toFixed(1));\n        if (Math.trunc(res) > 0) {\n            str = `${res}М`;\n            return str;\n        }\n        res = parseFloat((count / 1000).toFixed(1));\n        if (Math.trunc(res) > 0) {\n            str = `${res}К`;\n            return str;\n        }\n        return str;\n    }\n\n    render = () => {\n        const {id, photo, removeHandler, membersCount} = this.props;\n        return (\n            <div className=\"groupItem\">\n                <div className=\"photo\">\n                    <Avatar src={photo}/>\n                </div>\n                <div className=\"remove\" onClick={(e) => removeHandler(id)}>\n                    <Avatar style={{background: 'var(--destructive)'}} size={24}>\n                        <Icon16Cancel fill=\"var(--white)\"/>\n                    </Avatar>\n                </div>\n                {membersCount > 0 && <div className=\"membersCount\">\n                    {this.getMembersCount(membersCount)}\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default Presenter;\n","import React from 'react';\nimport {\n    Avatar,\n    Cell,\n    Div,\n    List,\n    ModalPage,\n    ModalPageHeader,\n    ModalRoot,\n    PanelHeaderButton,\n    Search,\n    Spinner\n} from \"@vkontakte/vkui\";\n// @ts-ignore\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\n\nclass Presenter extends React.Component {\n    public state: {\n        search: string,\n        items: {\n            id: number,\n            name: string,\n            photo_50: string,\n            screen_name: string,\n            members_count?: number\n            type?: string\n        }[]\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            search: '',\n            items: []\n        };\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    private onChange(e: any) {\n        if (e.target.value.indexOf(\"com/\") >= 0) {\n            let screenName = e.target.value.split('com/')[1];\n            if (!this.isItem(screenName)) {\n                this.getResolveScreenName(screenName);\n            }\n        }\n        this.setState({search: e.target.value});\n    }\n\n    private async getResolveScreenName(screenName: string) {\n        // @ts-ignore\n        const {token, getResolveScreenName} = this.props;\n        let response = await getResolveScreenName(screenName, token.access_token);\n        if (!response || !response.type) {\n            console.log('Не поддерживается');\n            return;\n        }\n        switch (response.type) {\n            case 'group':\n            case 'page':\n                await this.searchGroup(response.object_id, response.type);\n                break;\n            case 'user':\n                await this.searchUser(response.object_id, response.type);\n                break;\n            default:\n                console.log('Не поддерживается');\n        }\n    }\n\n    private isItem(screen_name: string) {\n        const {items} = this.state;\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].screen_name === screen_name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private async searchGroup(objectId: number, type: string) {\n        // @ts-ignore\n        const {token, getGroup} = this.props;\n        let group = await getGroup(objectId, token.access_token);\n        const {items} = this.state;\n        let newItems = items;\n        newItems[newItems.length] = {\n            id: group.id,\n            name: group.name,\n            photo_50: group.photo_50,\n            screen_name: group.screen_name,\n            members_count: group.members_count,\n            type: type\n        };\n        this.setState({items: newItems});\n    }\n\n    private async searchUser(objectId: number, type: string) {\n        // @ts-ignore\n        const {token, getUser} = this.props;\n        let user = await getUser(objectId, token.access_token);\n        const {items} = this.state;\n        let newItems = items;\n        newItems[newItems.length] = {\n            id: user.id,\n            name: `${user.first_name} ${user.last_name}`,\n            photo_50: user.photo_50,\n            screen_name: user.domain,\n            type: type\n        };\n        this.setState({items: newItems});\n    }\n\n    private async fetchData() {\n        await this.getGroupsList();\n        await this.getFriendsList();\n    }\n\n    private async getGroupsList() {\n        // @ts-ignore\n        const {token, getGroups, groups} = this.props;\n        let groupsList = groups;\n        const {items} = this.state;\n        if (!groupsList.count) {\n            groupsList = await getGroups(token.access_token);\n        }\n        groupsList = groupsList.items.map((item: any) => {\n            return {\n                id: item.id,\n                name: item.name,\n                photo_50: item.photo_50,\n                screen_name: item.screen_name,\n                members_count: item.members_count,\n                type: item.type\n            };\n        });\n        this.setState({items: items.concat(groupsList)});\n    }\n\n    private async getFriendsList() {\n        // @ts-ignore\n        const {token, getFriends, friends} = this.props;\n        let friendsList = friends;\n        const {items} = this.state;\n        if (!friendsList.count) {\n            friendsList = await getFriends(token.access_token);\n        }\n        friendsList = friendsList.items.map((item: any) => {\n            return {\n                id: item.id,\n                name: `${item.first_name} ${item.last_name}`,\n                screen_name: item.domain,\n                photo_50: item.photo_50,\n                type: 'user'\n            };\n        });\n        this.setState({items: items.concat(friendsList)});\n    }\n\n    get items() {\n        // @ts-ignore\n        const {search, items} = this.state;\n        const isScreenName = search.indexOf(\"com/\") >= 0;\n        let screenName = '';\n        if (isScreenName) {\n            screenName = search.split('com/')[1];\n        }\n        return items.filter(({name, screen_name}) => {\n            if (isScreenName) {\n                return screen_name.toLowerCase().indexOf(screenName.toLowerCase()) > -1;\n            }\n            return name.toLowerCase().indexOf(search.toLowerCase()) > -1;\n        });\n    }\n\n    private modalBack = () => {\n        // @ts-ignore\n        const {setModalApp} = this.props;\n        setModalApp(false);\n        return {};\n    };\n\n    private selectItem = (item: any) => {\n        // @ts-ignore\n        const {addItemHandler} = this.props;\n        addItemHandler(item);\n        this.modalBack();\n    };\n\n    render() {\n        // @ts-ignore\n        const {loadingGroups, loadingFriends} = this.props;\n        const loadingItems = loadingGroups || loadingFriends;\n        // @ts-ignore\n        const {search} = this.state;\n        return (\n            <ModalRoot activeModal=\"modalFormAddGroups\">\n                <ModalPage\n                    id=\"modalFormAddGroups\"\n                    dynamicContentHeight\n                    onClose={this.modalBack}\n                    header={\n                        <ModalPageHeader\n                            left={<PanelHeaderButton onClick={this.modalBack}><Icon24Cancel/></PanelHeaderButton>}\n                        >\n                            Добавить\n                        </ModalPageHeader>\n                    }>\n                    <Search\n                        value={search}\n                        onChange={this.onChange}\n                    />\n                    {loadingItems && <Div><Spinner size=\"medium\"/></Div>}\n                    {!loadingItems && search.length > 0 && <List>\n                        {this.items.slice(0, 5).map((item) => (\n                            <Cell\n                                before={<Avatar size={40}\n                                                src={item.photo_50}/>}\n                                onClick={() => this.selectItem(item)}\n                                key={item.screen_name}\n                            >{item.name}</Cell>\n                        ))}\n                    </List>}\n                    {!loadingItems && search.length === 0 && <Div style={{color: 'gray'}}>\n                        Введите ссылку на сообщество или пользователя.\n                    </Div>}\n                </ModalPage>\n            </ModalRoot>\n        )\n            ;\n    }\n}\n\nexport default Presenter;","import { connect } from \"react-redux\";\n\nimport Presenter from \"./Presenter\";\nimport {setModalApp, getGroups, getFriends, getResolveScreenName, getGroup, getUser} from \"../../../redux/actions\";\n\nconst mapStateToProps = (state: any) => ({\n    state,\n    token: state.token,\n    groups: state.groups,\n    group: state.group,\n    userBy: state.userBy,\n    utils: state.utils,\n    friends: state.friends,\n    loadingGroups: state.groups.loadingGroups,\n    loadingFriends: state.groups.loadingFriends,\n    loadingGroup: state.group.loadingGroup,\n    loadingUserBy: state.group.loadingUserBy,\n    loadingResolveScreenName: state.utils.loadingResolveScreenName,\n    modal: state.modalApp.modal,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    dispatch,\n    setModalApp: (block: any) => dispatch(setModalApp(block)),\n    getGroups: (token: string) => dispatch(getGroups(token)),\n    getFriends: (token: string) => dispatch(getFriends(token)),\n    getGroup: (id: number, token: string) => dispatch(getGroup(id, token)),\n    getUser: (id: number, token: string) => dispatch(getUser(id, token)),\n    getResolveScreenName: (url: string, token: string) => dispatch(getResolveScreenName(url, token)),\n});\n\nconst AddForm = connect(mapStateToProps, mapDispatchToProps)(Presenter);\n\nexport default AddForm;","import connect from \"@vkontakte/vk-connect\";\n\nexport const getGroups = (token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_GROUPS_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"groups.get\",\n            params: {\n                extended: \"1\",\n                fields: \"id,is_admin,admin_level,name,photo_50,screen_name,type,members_count\",\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_GROUPS_RES\", payload: req});\n        return req.response;\n    } catch (error) {\n        dispatch({type: \"GET_GROUPS_FAIL\", payload: error.message});\n    }\n};\n\nexport const getGroup = (id: number, token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_GROUP_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"groups.getById\",\n            params: {\n                group_id: id,\n                fields: \"id,is_admin,admin_level,name,photo_50,screen_name,type,members_count\",\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_GROUP_RES\", payload: req});\n        return req.response[0];\n    } catch (error) {\n        dispatch({type: \"GET_GROUP_FAIL\", payload: error.message});\n    }\n};\n\nexport const groupReset = () => async (dispatch: any) => {\n    dispatch({type: \"GROUP_RESET_RES\"});\n};","import connect from \"@vkontakte/vk-connect\";\n\nexport const getFriends = (token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_FRIENDS_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"friends.get\",\n            params: {\n                fields: \"photo_50, domain\",\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_FRIENDS_RES\", payload: req});\n        return req.response;\n    } catch (error) {\n        dispatch({type: \"GET_FRIENDS_FAIL\", payload: error.message});\n    }\n};\n\nexport const getGroup = (id: number, token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_GROUP_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"groups.getById\",\n            request_id: \"groupCurrent\",\n            params: {\n                group_id: id,\n                fields: \"id,is_admin,admin_level,name,photo_50,screen_name,type,members_count\",\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n\n        dispatch({type: \"GET_GROUP_RES\", payload: req});\n        return req;\n    } catch (error) {\n        dispatch({type: \"GET_GROUP_FAIL\", payload: error.message});\n    }\n};","import Presenter from \"./Presenter\";\n\nconst UserList = Presenter;\n\nexport default UserList;\n","import React from \"react\";\nimport {Cell, FormLayout, Group, Header, List, Textarea} from \"@vkontakte/vkui\";\n// @ts-ignore\nimport Icon24Upload from '@vkontakte/icons/dist/24/upload';\n\nexport interface Props {\n    items: any[];\n}\n\nexport interface State {\n    separator: string;\n}\n\nclass Presenter extends React.Component <Props, State> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            separator: ', '\n        };\n    }\n\n    render = () => {\n        const {items} = this.props;\n        const {separator} = this.state;\n        let itemsStr = items.join(separator);\n        return (\n            <div>\n                <Group header={<Header mode=\"secondary\">Найдено {items.length} общих человек</Header>}>\n                    <FormLayout>\n                        <Textarea top=\"ID пользователей\" value={itemsStr} />\n                    </FormLayout>\n                    <List>\n                        <Cell before={<Icon24Upload />}>Выгрузить в TXT</Cell>\n                        <Cell before={<Icon24Upload />}>Выгрузить в EXCEL</Cell>\n                    </List>\n                </Group>\n            </div>\n        );\n    }\n}\n\nexport default Presenter;\n","import React from \"react\";\nimport './Styles.scss';\nimport {Button, Div, InfoRow, Progress} from \"@vkontakte/vkui\";\n// @ts-ignore\nimport Icon16Users from '@vkontakte/icons/dist/16/users';\nimport UserList from \"./UserList\";\n\nexport interface Props {\n    items: any[];\n}\n\nexport interface State {\n    progress: number;\n    process: boolean;\n    intersec: any[];\n    isStart: boolean;\n}\n\nclass Presenter extends React.Component <Props, State> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            progress: 0,\n            process: false,\n            intersec: [],\n            isStart: false\n        };\n        this.startButton = this.startButton.bind(this);\n    }\n\n    private async start() {\n        this.startProcess();\n        // @ts-ignore\n        const {items} = this.props;\n        let allMembersCount = 0;\n        for (let i = 0; i < items.length; i++) {\n            allMembersCount += items[i].members_count;\n        }\n        let currentCount = 0;\n        let intersec: any[] = [];\n        for (let i = 0; i < items.length; i++) {\n            let members = [];\n            switch (items[i].type) {\n                case 'group':\n                case 'page':\n                    members = await this.getMembersByGroupId(items[i].id, items[i].members_count, allMembersCount, currentCount);\n                    break;\n                case 'user':\n                    members = await this.getMembersByUserId(items[i].id);\n                    break;\n            }\n            members = members.map((item: string) => parseInt(item));\n            currentCount += members.length;\n            if (intersec.length === 0) {\n                intersec = members;\n            } else {\n                intersec = this.intersecSortArr(intersec, members);\n            }\n        }\n        this.setState({intersec: intersec});\n        this.stopProcess();\n    }\n\n    private intersecSortArr(array_1: any[], array_2: any[]) {\n        let n = array_1.length, m = array_2.length, i = 0, k = 0, j = 0, array_3 = [];\n        while ((i < n) && (j < m)) // пока не дошли до конца массива\n        {\n            if (array_1[i] === array_2[j]) {\n                // запишем элемент в массив array_3\n                array_3[k] = array_1[i];\n                // и сдвинем позицию во всех 3 массивах\n                k++;\n                i++;\n                j++;\n            } else {\n                if (array_1[i] < array_2[j]) {\n                    i++; // сдвинем позицию в первом массиве\n                } else {\n                    j++; // сдвинем позицию во втором массиве\n                }\n            }\n        }\n        return array_3;\n    }\n\n    private async getMembersByGroupId(id: number, membersCount: number, allMembersCount: number, currentCount: number) {\n        const delay = (duration: any) => new Promise(resolve => setTimeout(resolve, duration));\n        // @ts-ignore\n        const {token, getExecuteGetMembers} = this.props;\n        let members: any[] = [];\n        let offset: number = 0;\n        while (members.length < membersCount && offset < membersCount) {\n            let newMembers = await getExecuteGetMembers(id, offset, membersCount, token.access_token);\n            members = members.concat(newMembers);\n            offset += 25000;\n            let membersCountProcess = currentCount + members.length;\n            let proc = Math.ceil((membersCountProcess / allMembersCount) * 100);\n            this.setProgress(proc);\n            await delay(334);\n        }\n\n        return members;\n    }\n\n    private async getMembersByUserId(id: number) {\n        const delay = (duration: any) => new Promise(resolve => setTimeout(resolve, duration));\n        // @ts-ignore\n        const {token, getExecuteGetFriends} = this.props;\n        let members = await getExecuteGetFriends(id, token.access_token);\n        await delay(334);\n        return members;\n    }\n\n    private startProcess() {\n        console.log('startProcess');\n        this.setState({progress: 0, process: true});\n    }\n\n    private setProgress(proc: number) {\n        this.setState({progress: proc});\n    }\n\n    private stopProcess() {\n        console.log('stopProcess');\n        this.setState({progress: 0, process: false});\n    }\n\n    private startButton() {\n        this.start();\n        this.setState({isStart: true});\n    }\n\n    render = () => {\n        const {progress, process, intersec, isStart} = this.state;\n        const {items} = this.props;\n        return (\n            <div>\n                {items.length > 1 &&\n                <Div><Button onClick={this.startButton} before={<Icon16Users/>} disabled={process}>Начать сравнение</Button></Div>}\n                {process && <Div>\n                    <InfoRow header={false} title=\"Default\">\n                        <Progress value={progress}/>\n                    </InfoRow>\n                </Div>}\n                {!process && isStart && <UserList items={intersec}/>}\n            </div>\n        );\n    }\n}\n\nexport default Presenter;\n","import {connect} from \"react-redux\";\nimport Presenter from \"./Presenter\";\n\nimport {getExecuteGetMembers, getExecuteGetFriends} from \"../../../../redux/actions\";\n\nconst mapStateToProps = (state: any) => ({\n    state,\n    token: state.token,\n    execute: state.execute,\n    loadingExecuteGetMembers: state.execute.loadingExecuteGetMembers,\n    loadingExecuteGetFriends: state.execute.loadingExecuteGetFriends\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    dispatch,\n    getExecuteGetMembers: (group_id: number, offset: number, total_count: number, token: string) => dispatch(getExecuteGetMembers(group_id, offset, total_count, token)),\n    getExecuteGetFriends: (user_id: number, token: string) => dispatch(getExecuteGetFriends(user_id, token)),\n});\n\nconst ProcessForm = connect(mapStateToProps, mapDispatchToProps)(Presenter);\n\nexport default ProcessForm;\n","import connect from \"@vkontakte/vk-connect\";\n\nexport const getExecuteGetMembers = (group_id: number, offset: number, total_count: number, token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_EXECUTE_GET_MEMBERS_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"execute.getMembers\",\n            params: {\n                group_id: group_id,\n                offset: offset,\n                total_count: total_count,\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_EXECUTE_GET_MEMBERS_RES\", payload: req});\n        return req.response;\n    } catch (error) {\n        dispatch({type: \"GET_EXECUTE_GET_MEMBERS_FAIL\", payload: error.message});\n    }\n};\n\nexport const getExecuteGetFriends = (user_id: number, token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_EXECUTE_GET_FRIENDS_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"execute.getFriends\",\n            params: {\n                user_ids: user_id,\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_EXECUTE_GET_FRIENDS_RES\", payload: req});\n        return req.response;\n    } catch (error) {\n        dispatch({type: \"GET_EXECUTE_GET_FRIENDS_FAIL\", payload: error.message});\n    }\n};\n\nexport const getExecuteGetFriendsInfo = (user_id: number, token: string) => async (dispatch: any) => {\n    dispatch({type: \"GET_EXECUTE_GET_FRIENDS_INFO_REQ\"});\n\n    try {\n        const req = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"execute.getFriendsInfo\",\n            params: {\n                user_ids: user_id,\n                v: \"5.102\",\n                access_token: token\n            }\n        });\n        dispatch({type: \"GET_EXECUTE_GET_FRIENDS_INFO_RES\", payload: req});\n        return req.response;\n    } catch (error) {\n        dispatch({type: \"GET_EXECUTE_GET_FRIENDS_INFO_FAIL\", payload: error.message});\n    }\n};","import React from \"react\";\nimport {CellButton, Separator, Alert, Div} from \"@vkontakte/vkui\";\n// @ts-ignore\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\nimport GroupItem from \"./Item\";\nimport AddForm from \"../AddForm\";\nimport ProcessForm from \"./ProcessForm\";\nimport './Styles.scss';\n\nclass Presenter extends React.Component {\n    public state: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            groups: []\n        };\n        this.closePopout = this.closePopout.bind(this);\n        this.openDestructive = this.openDestructive.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.removeHandler = this.removeHandler.bind(this);\n        this.openAddGroupForm = this.openAddGroupForm.bind(this);\n    }\n\n    public removeItem(id: number) {\n        let groups = this.state.groups.filter((group: any) => group.id !== id);\n        this.setState({groups: groups});\n    }\n\n    private closePopout() {\n        // @ts-ignore\n        const {setPopoutApp} = this.props;\n        setPopoutApp(false);\n    }\n\n    private removeHandler(id: number) {\n        this.openDestructive(id);\n    }\n\n    private openDestructive(id: number) {\n        // @ts-ignore\n        const {setPopoutApp} = this.props;\n        setPopoutApp(<Alert\n            actionsLayout=\"vertical\"\n            actions={[{\n                title: 'Удалить',\n                autoclose: true,\n                mode: 'destructive',\n                action: () => this.removeItem(id),\n            }, {\n                title: 'Отмена',\n                autoclose: true,\n                mode: 'cancel'\n            }]}\n            onClose={this.closePopout}\n        >\n            <h2>Удалить?</h2>\n            <p>Вы уверены, что хотите удалить из списка?</p>\n        </Alert>);\n    }\n\n    private openAddGroupForm() {\n        console.log('modal');\n        // @ts-ignore\n        const {setModalApp} = this.props;\n        // @ts-ignore\n        setModalApp(<AddForm addItemHandler={this.addItem}/>);\n    }\n\n    private addItem = (item: any) => {\n        console.log(item);\n        let groups = this.state.groups;\n        groups[groups.length] = item;\n        this.setState({groups: groups});\n    };\n\n    render = () => {\n        const {groups} = this.state;\n        return (\n            <div>\n                <CellButton onClick={this.openAddGroupForm} before={<Icon24Add/>}>Добавить к сравнению</CellButton>\n                <Separator wide/>\n                {groups.length > 0 && <div>\n                    <div className=\"groupsList\">\n                        {groups.map((group: any) => (\n                            <GroupItem key={group.id}\n                                       photo={group.photo_50}\n                                       id={group.id}\n                                       membersCount={group.members_count}\n                                       removeHandler={this.removeHandler}/>\n                        ))}\n                    </div>\n                    <ProcessForm items={this.state.groups}/>\n                </div>}\n                {groups.length < 2 && <Div>Добавьте 2 и более обьекта для сравнения</Div>}\n            </div>\n        );\n    }\n}\n\nexport default Presenter;\n","import { connect } from \"react-redux\";\n\nimport Presenter from \"./Presenter\";\nimport {setPopoutApp, setModalApp} from \"../../../redux/actions\";\n\nconst mapStateToProps = (state: any) => ({\n    state,\n    popout: state.popoutApp.popout,\n    modal: state.modalApp.modal,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    dispatch,\n    setPopoutApp: (block: any) => dispatch(setPopoutApp(block)),\n    setModalApp: (block: any) => dispatch(setModalApp(block)),\n});\n\nconst List = connect(mapStateToProps, mapDispatchToProps)(Presenter);\n\nexport default List;\n","export const getPopoutApp = () => (dispatch: any) => {\n    dispatch({type: \"GET_POPOUT\"});\n};\n\nexport const setPopoutApp = (block: any) => (dispatch: any) => {\n    dispatch({type: \"SET_POPOUT\", block});\n};","import Presenter from \"./Presenter\";\n\nconst Groups = Presenter;\n\nexport default Groups;\n","import React from 'react';\nimport Layout from \"../Layout\";\nimport GroupsList from \"../../components/GroupsList/List\";\nimport {PanelHeader} from \"@vkontakte/vkui\";\n\nconst Presenter = (props: any) => {\n    return (\n        <Layout id=\"groups\">\n            <PanelHeader>Общие участники</PanelHeader>\n            <GroupsList/>\n        </Layout>\n    );\n};\n\nexport default Presenter;\n","import React from 'react';\nimport Layout from \"../Layout\";\nimport {Button, Div, Input, PanelHeader, Spinner} from \"@vkontakte/vkui\";\n\nclass Presenter extends React.Component {\n\n    public state: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            search: '',\n            error: '',\n            loading: false,\n            university: {},\n            school: {},\n            age: 0\n        };\n        this.getInformationHandler = this.getInformationHandler.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    private getInformationHandler(e: any) {\n        const {search} = this.state;\n        if (search.indexOf(\"com/\") < 0) {\n            this.setState({error: 'Ссылка введена неверно!'});\n            return;\n        }\n        this.setState({error: ''});\n        let screenName = search.split('com/')[1];\n        this.start(screenName);\n    }\n\n    private async start(screenName: string) {\n        // @ts-ignore\n        const {getExecuteGetFriendsInfo, token} = this.props;\n\n        this.setState({loading: true});\n        let user_id = await this.getObjectId(screenName);\n        if (!user_id) return;\n        let friends = await getExecuteGetFriendsInfo(user_id, token.access_token);\n        let university = await this.getMyUniversities(friends);\n        this.setState({university: university});\n        let school = await this.getMySchool(friends);\n        this.setState({school: school});\n        let age = await this.getMyAge(friends);\n        this.setState({age: age});\n        this.setState({loading: false});\n    }\n\n    private async getMyUniversities(friends: any[]) {\n        let list = [];\n        for (let i = 0; i < friends.length; i++) {\n            if (!friends[i].universities) {\n                continue;\n            }\n            let universities = friends[i].universities;\n            for (let j = 0; j < universities.length; j++) {\n                let item = this.getItemArrayById(universities[j].id, list);\n                if (item === null) {\n                    let uni = universities[j];\n                    uni.replayCount = 1;\n                    list[list.length] = universities[j];\n                } else {\n                    this.replayCountIncItemArrayById(item.id, list);\n                }\n            }\n        }\n        return this.getItemMaxReplayCount(list);\n    }\n\n    private async getMySchool(friends: any[]) {\n        let list = [];\n        for (let i = 0; i < friends.length; i++) {\n            if (!friends[i].schools) {\n                continue;\n            }\n            let schools = friends[i].schools;\n            for (let j = 0; j < schools.length; j++) {\n                let item = this.getItemArrayById(schools[j].id, list);\n                if (item === null) {\n                    let uni = schools[j];\n                    uni.replayCount = 1;\n                    list[list.length] = schools[j];\n                } else {\n                    this.replayCountIncItemArrayById(item.id, list);\n                }\n            }\n        }\n        return this.getItemMaxReplayCount(list);\n    }\n\n    private async getMyAge(friends: any[]) {\n        let myAge = 0;\n        let ageList: number[] = [];\n        for (let i = 0; i < friends.length; i++) {\n            if (!friends[i].bdate) {\n                continue;\n            }\n            let bdate = friends[i].bdate;\n            if (bdate.replace(/[^.]/g, \"\").length !== 2) {\n                continue;\n            }\n            let date = bdate.split('.');\n            let age = this.birthDateToAge(`${date[2]}-${date[1]}-${date[0]}`);\n            if (!ageList[age]) {\n                ageList[age] = 1;\n            } else {\n                ageList[age]++;\n            }\n        }\n        let maxAgeRepeat = 0;\n        ageList.map(((item, index) => {\n            if (maxAgeRepeat < item) {\n                maxAgeRepeat = item;\n                myAge = index;\n            }\n            return item;\n        }));\n        return myAge;\n    }\n\n    private birthDateToAge(birthDate: string) {\n        // @ts-ignore\n        return ((new Date().getTime() - new Date(birthDate)) / (24 * 3600 * 365.25 * 1000)) | 0;\n    }\n\n    private getItemArrayById(id: number, array: any[]) {\n        for (let i = 0; i < array.length; i++) {\n            if (id === array[i].id) {\n                return array[i];\n            }\n        }\n        return null;\n    }\n    private getItemMaxReplayCount(array: any[]) {\n        let maxItem = array[0];\n        for (let i = 1; i < array.length; i++) {\n            if (maxItem.replayCount < array[i].replayCount) {\n                maxItem = array[i];\n            }\n        }\n        return maxItem;\n    }\n\n    private replayCountIncItemArrayById(id: number, array: any[]) {\n        for (let k = 0; k < array.length; k++) {\n            if (id === array[k].id) {\n                array[k].replayCount++;\n            }\n        }\n    }\n\n    private async getObjectId(screenName: string) {\n        // @ts-ignore\n        const {token, getResolveScreenName} = this.props;\n        let response = await getResolveScreenName(screenName, token.access_token);\n        if (!response || !response.type) {\n            this.setState({error: 'Это не пользователь!', loading: false});\n            return false;\n        }\n        if (response.type !== 'user') {\n            this.setState({error: 'Это не пользователь!', loading: false});\n            return false;\n        }\n        return response.object_id;\n    }\n\n    private onChange(e: any) {\n        this.setState({search: e.target.value});\n    }\n\n    render = () => {\n        const {search, error, loading, university, school, age} = this.state;\n        return (\n            <Layout id=\"groups\">\n                <PanelHeader>Скрытые данные</PanelHeader>\n                <Div>Введите ссылку на профиль пользователя</Div>\n                <Div>\n                    <Input type=\"text\"\n                           placeholder=\"https://vk.com/******\"\n                           value={search}\n                           onChange={this.onChange}/>\n                    <Button size=\"l\" style={{marginTop: '10px'}} onClick={this.getInformationHandler}>Получить\n                        информацию</Button>\n                </Div>\n                {university.name && <Div>\n                    Университет \"{university.name}\"\n                </Div>}\n                {school.name && <Div>\n                    Школа \"{school.name}\"\n                </Div>}\n                {age > 0 && <Div>\n                    Примерный возраст: {age}\n                </Div>}\n                {loading && <Div><Spinner size=\"medium\" style={{marginTop: 20}}/></Div>}\n                {error.length > 0 && <Div style={{color: 'red'}}>{error}</Div>}\n            </Layout>\n        );\n    }\n}\n\nexport default Presenter;\n","import { connect } from \"react-redux\";\n\nimport Presenter from \"./Presenter\";\nimport {getExecuteGetFriendsInfo, getResolveScreenName} from \"../../redux/actions\";\n\nconst mapStateToProps = (state: any) => ({\n    state,\n    token: state.token\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    dispatch,\n    getExecuteGetFriendsInfo: (user_id: number, token: string) => dispatch(getExecuteGetFriendsInfo(user_id, token)),\n    getResolveScreenName: (url: string, token: string) => dispatch(getResolveScreenName(url, token)),\n});\n\nconst SecurityUser = connect(mapStateToProps, mapDispatchToProps)(Presenter);\n\nexport default SecurityUser;","import React from 'react';\nimport './NotFoundPage.scss';\n// @ts-ignore\nimport {Link} from \"react-router\";\nimport Layout from \"../Layout\";\n\nconst NotFoundPage = () => {\n  return (\n      <Layout id=\"layout\">\n          Страница не найдена! <Link to=\"/\">Перейти на главная страницу...</Link>\n      </Layout>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// @ts-ignore\nimport {Router, Route, browserHistory} from \"react-router\";\n// @ts-ignore\nimport connect from \"@vkontakte/vk-connect\";\n// @ts-ignore\nimport {syncHistoryWithStore} from \"react-router-redux\";\nimport {Provider} from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\nimport Home from \"./containers/Home\";\nimport Contacts from \"./containers/Contacts/Contacts\";\nimport Faq from \"./containers/Faq/Faq\";\nimport Groups from \"./containers/Groups\";\nimport SecurityUser from \"./containers/SecurityUser\";\nimport NotFoundPage from \"./containers/NotFoundPage/NotFoundPage\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport './index.scss';\n\nconst store = configureStore();\n\nconst history = syncHistoryWithStore(browserHistory, store);\n\nconnect.send(\"VKWebAppInit\", {});\n\nReactDOM.render((\n    <Provider store={store}>\n        <Router history={history}>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/contacts' component={Contacts}/>\n            <Route exact path='/faq' component={Faq}/>\n            <Route exact path='/groups' component={Groups}/>\n            <Route exact path='/securityUser' component={SecurityUser}/>\n            <Route component={NotFoundPage}/>\n        </Router>\n    </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}